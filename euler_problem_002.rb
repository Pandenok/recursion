# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be: 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

def fibs_rec(length, max_value)
  return [0] if length.zero?
  return [0, 1] if length == 1
  sequence = fibs_rec(length - 1, max_value)
  return sequence if sequence[-1] + sequence[-2] > max_value
  sequence << sequence[-1] + sequence[-2]
end

p fibs_rec(50, 4_000_000).map { |n| n if n.even? }.compact.sum
